# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)

User.create(username:'guest', email:'guest@guest.com', password:'password')

Story.create(title: 'This is a story', body: '{"entityMap":{},"blocks":[{"key":"1q2r","text":"This is a story.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":16,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3gg33","text":"This is another line of that story.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7nvqh","text":"this is a image","type":"atomic:image","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"src":"blob:http://localhost:3000/05b545cd-1bc7-4d2d-8dd5-cc600e85af33"}}]}', user_id: 4)

# TODO: remove quotes from keys
Story.create({
"title": "How it feels to learn JavaScript in 2016",
"body": "{\"entityMap\":{},\"blocks\":[{\"key\":\"4mn3u\",\"text\":\"\",\"type\":\"atomic:image\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"src\":\"http://i.imgur.com/TZGReCg.png\"}},{\"key\":\"fb1rq\",\"text\":\"The following is inspired by the article “It’s the future” from Circle CI. You can read the original here. This piece is just an opinion, and like any JavaScript framework, it shouldn’t be taken too seriously. No JavaScript frameworks were created during the writing of this article.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"58ktv\",\"text\":\"Hey, I got this new web project, but to be honest I haven’t coded much web in a few years and I’ve heard the landscape changed a bit. You are the most up-to date web dev around here right?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"clqth\",\"text\":\"-The actual term is Front End engineer, but yeah, I’m the right guy. I do web in 2016. Visualisations, music players, flying drones that play football, you name it. I just came back from JsConf and ReactConf, so I know the latest technologies to create web apps.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":262,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6m60l\",\"text\":\"Cool. I need to create a page that displays the latest activity from the users, so I just need to get the data from the REST endpoint and display it in some sort of filterable table, and update it if anything changes in the server. I was thinking maybe using jQuery to fetch and display the data?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e9f9h\",\"text\":\"-Oh my god no, no one uses jQuery anymore. You should try learning React, it’s 2016.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":84,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dmt1\",\"text\":\"Oh, OK. What’s React?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"99uph\",\"text\":\"-It’s a super cool library made by some guys at Facebook, it really brings control and performance to your application, by allowing you to handle any view changes very easily.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":175,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9kijk\",\"text\":\"That sounds neat. Can I use React to display data from the server?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7u5vh\",\"text\":\"-Yeah, but first you need to add React and React DOM as a library in your webpage.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":82,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"37rh\",\"text\":\"Wait, why two libraries?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bd2df\",\"text\":\"-So one is the actual library and the second one is for manipulating the DOM, which now you can describe in JSX.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":112,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"77frv\",\"text\":\"JSX? What is JSX?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6f6bo\",\"text\":\"-JSX is just a JavaScript syntax extension that looks pretty much like XML. It’s kind of another way to describe the DOM, think of it as a better HTML.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":151,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4mm01\",\"text\":\"What’s wrong with HTML?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d4t79\",\"text\":\"-It’s 2016. No one codes HTML directly anymore.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":47,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3ev53\",\"text\":\"Right. Anyway, if I add these two libraries then I can use React?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3i2tl\",\"text\":\"-Not quite. You need to add Babel, and then you are able to use React.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":70,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"elnp2\",\"text\":\"Another library? What’s Babel?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bkvbo\",\"text\":\"-Oh, Babel is a transpiler that allows you to target specific versions of JavaScript, while you code in any version of JavaScript. You don’t HAVE to include Babel to use ReactJS, but unless you do, you are stuck with using ES5, and let’s be real, it’s 2016, you should be coding in ES2016+ like the rest of the cool kids do.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":324,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3b2pu\",\"text\":\"ES5? ES2016+? I’m getting lost over here. What’s ES5 and ES2016+?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5tbif\",\"text\":\"-ES5 stands for ECMAScript 5. It’s the edition that has most people target since it has been implemented by most browsers nowadays.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":131,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ffkfn\",\"text\":\"ECMAScript?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d3gqm\",\"text\":\"-Yes, you know, the scripting standard JavaScript was based on in 1999 after its initial release in 1995, back then when JavaScript was named Livescript and only ran in the Netscape Navigator. That was very messy back then, but thankfully now things are very clear and we have, like, 7 editions of this implementation.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":318,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8lald\",\"text\":\"7 editions. For real. And ES5 and ES2016+ are?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"91imi\",\"text\":\"-The fifth and seventh edition respectively.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":44,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5g7lb\",\"text\":\"Wait, what happened with the sixth?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ecke\",\"text\":\"-You mean ES6? Yeah, I mean, each edition is a superset of the previous one, so if you are using ES2016+, you are using all the features of the previous versions.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":162,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cmlc5\",\"text\":\"Right. And why use ES2016+ over ES6 then?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bh68k\",\"text\":\"-Well, you COULD use ES6, but to use cool features like async and await, you need to use ES2016+. Otherwise you are stuck with ES6 generators with coroutines to block asynchronous calls for proper control flow.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":210,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cvun5\",\"text\":\"I have no idea what you just said, and all these names are confusing. Look, I’m just loading a bunch of data from a server, I used to be able to just include jQuery from a CDN and just get the data with AJAX calls, why can’t I just do that?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6r910\",\"text\":\"-It’s 2016 man, no one uses jQuery anymore, it ends up in a bunch of spaghetti code. Everyone knows that.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":105,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dhssi\",\"text\":\"Right. So my alternative is to load three libraries to fetch data and display a HTML table.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"87hv9\",\"text\":\"-Well, you include those three libraries but bundle them up with a module manager to load only one file.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":104,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5l27a\",\"text\":\"I see. And what’s a module manager?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e9jv2\",\"text\":\"-The definition depends on the environment, but in the web we usually mean anything that supports AMD or CommonJS modules.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":122,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6oap\",\"text\":\"Riiight. And AMD and CommonJS are…?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"asjns\",\"text\":\"-Definitions. There are ways to describe how multiple JavaScript libraries and classes should interact. You know, exports and requires? You can write multiple JavaScript files defining the AMD or CommonJS API and you can use something like Browserify to bundle them up.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":269,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"68sqt\",\"text\":\"OK, that makes sense… I think. What is Browserify?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"hes3\",\"text\":\"-It’s a tool that allows you to bundle CommonJS described dependencies to files that can be run in the browser. It was created because most people publish those dependencies in the npm registry.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":194,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8vahg\",\"text\":\"npm registry?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"452rk\",\"text\":\"-It’s a very big public repository where smart people put code and dependencies as modules.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":91,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"qqge\",\"text\":\"Like a CDN?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bqgho\",\"text\":\"-Not really. It’s more like a centralised database where anyone can publish and download libraries, so you can use them locally for development and then upload them to a CDN if you want to.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":189,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a0anv\",\"text\":\"Oh, like Bower!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4tsb\",\"text\":\"-Yes, but it’s 2016 now, no one uses Bower anymore.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bbhvf\",\"text\":\"Oh, I see… so I need to download the libraries from npm then?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4sbks\",\"text\":\"-Yes. So for instance, if you want to use React , you download the React module and import it in your code. You can do that for almost every popular JavaScript library.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":168,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"veq\",\"text\":\"Oh, like Angular!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c6nrh\",\"text\":\"-Angular is so 2015. But yes. Angular would be there, alongside VueJS or RxJS and other cool 2016 libraries. Want to learn about those?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":135,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4l3r0\",\"text\":\"Let’s stick with React, I’m already learning too many things now. So, if I need to use React I fetch it from this npm and then use this Browserify thing?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b8fji\",\"text\":\"-Yes.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"aetr\",\"text\":\"That seems overly complicated to just grab a bunch of dependencies and tie them together.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c95i\",\"text\":\"-It is, that’s why you use a task manager like Grunt or Gulp or Broccoli to automate running Browserify. Heck, you can even use Mimosa.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":135,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9rvjo\",\"text\":\"Grunt? Gulp? Broccoli? Mimosa? The heck are we talking about now?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fgumm\",\"text\":\"-Task managers. But they are not cool anymore. We used them in like, 2015, then we used Makefiles, but now we wrap everything with Webpack.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":139,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7di0l\",\"text\":\"Makefiles? I thought that was mostly used on C or C++ projects.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"223gm\",\"text\":\"-Yeah, but apparently in the web we love making things complicated and then going back to the basics. We do that every year or so, just wait for it, we are going to do assembly in the web in a year or two.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":205,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"abqmu\",\"text\":\"Sigh. You mentioned something called Webpack?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ns3q\",\"text\":\"-It’s another module manager for the browser while being kind of a task runner as well. It’s like a better version of Browserify.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":129,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"abu52\",\"text\":\"Oh, Ok. Why is it better?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8pel2\",\"text\":\"-Well, maybe not better, it’s just more opinionated on how your dependencies should be tied. Webpack allows you to use different module managers, and not only CommonJS ones, so for instance native ES6 supported modules.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":219,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b71n5\",\"text\":\"I’m extremely confused by this whole CommonJS/ES6 thing.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2gvtt\",\"text\":\"-Everyone is, but you shouldn’t care anymore with SystemJS.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":59,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dml7m\",\"text\":\"Jesus christ, another noun-js. Ok, and what is this SystemJS?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f3n88\",\"text\":\"-Well, unlike Browserify and Webpack 1.x, SystemJS is a dynamic module loader that allows you to tie multiple modules in multiple files instead of bundling them in one big file.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":177,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b59or\",\"text\":\"Wait, but I thought we wanted to build our libraries in one big file and load that!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1tgk5\",\"text\":\"-Yes, but because HTTP/2 is coming now multiple HTTP requests are actually better.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":82,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6hnjc\",\"text\":\"Wait, so can’t we just add the three original libraries for React??\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4b1oa\",\"text\":\"-Not really. I mean, you could add them as external scripts from a CDN, but you would still need to include Babel then.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":119,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"817ep\",\"text\":\"Sigh. And that is bad right?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dgq9q\",\"text\":\"-Yes, you would be including the entire babel-core, and it wouldn’t be efficient for production. On production you need to perform a series of pre-tasks to get your project ready that make the ritual to summon Satan look like a boiled eggs recipe. You need to minify assets, uglify them, inline css above the fold, defer scripts, as well as-\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":341,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5rt8r\",\"text\":\"I got it, I got it. So if you wouldn’t include the libraries directly in a CDN, how would you do it?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bbvsf\",\"text\":\"-I would transpile it from Typescript using a Webpack + SystemJS + Babel combo.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":79,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7a0fq\",\"text\":\"Typescript? I thought we were coding in JavaScript!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"28ro1\",\"text\":\"-Typescript IS JavaScript, or better put, a superset of JavaScript, more specifically JavaScript on version ES6. You know, that sixth version we talked about before?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":165,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a9dg\",\"text\":\"I thought ES2016+ was already a superset of ES6! WHY we need now this thing called Typescript?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7v3s0\",\"text\":\"-Oh, because it allows us to use JavaScript as a typed language, and reduce run-time errors. It’s 2016, you should be adding some types to your JavaScript code.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":160,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c4409\",\"text\":\"And Typescript obviously does that.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d5utg\",\"text\":\"-Flow as well, although it only checks for typing while Typescript is a superset of JavaScript which needs to be compiled.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":122,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"elv3n\",\"text\":\"Sigh… and Flow is?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d8d2u\",\"text\":\"-It’s a static type checker made by some guys at Facebook. They coded it in OCaml, because functional programming is awesome.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":125,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"eqaug\",\"text\":\"OCaml? Functional programming?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"256jb\",\"text\":\"-It’s what the cool kids use nowadays man, you know, 2016? Functional programming? High order functions? Currying? Pure functions?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":130,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"deail\",\"text\":\"I have no idea what you just said.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7902c\",\"text\":\"-No one does at the beginning. Look, you just need to know that functional programming is better than OOP and that’s what we should be using in 2016.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":149,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3mfnu\",\"text\":\"Wait, I learned OOP in college, I thought that was good?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7qdvj\",\"text\":\"-So was Java before being bought by Oracle. I mean, OOP was good back in the days, and it still has its uses today, but now everyone is realising modifying states is equivalent to kicking babies, so now everyone is moving to immutable objects and functional programming. Haskell guys had been calling it for years, -and don’t get me started with the Elm guys- but luckily in the web now we have libraries like Ramda that allow us to use functional programming in plain JavaScript.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":480,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bs4t9\",\"text\":\"Are you just dropping names for the sake of it? What the hell is Ramnda?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b2gvn\",\"text\":\"-No. Ramda. Like Lambda. You know, that David Chambers’ library?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":64,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cvpab\",\"text\":\"David who?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"49oai\",\"text\":\"-David Chambers. Cool guy. Plays a mean Coup game. One of the contributors for Ramda. You should also check Erik Meijer if you are serious about learning functional programming.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":177,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5i86u\",\"text\":\"And Erik Meijer is…?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ksvp\",\"text\":\"-Functional programming guy as well. Awesome guy. He has a bunch of presentations where he trashes Agile while using this weird coloured shirt. You should also check some of the stuff from Tj, Jash Kenas, Sindre Sorhus, Paul Irish, Addy Osmani-\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":244,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ba6k\",\"text\":\"Ok. I’m going to stop you there. All that is good and fine, but I think all that is just so complicated and unnecessary for just fetching data and displaying it. I’m pretty sure I don’t need to know these people or learn all those things to create a table with dynamic data. Let’s get back to React. How can I fetch the data from the server with React?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f5umn\",\"text\":\"-Well, you actually don’t fetch the data with React, you just display the data with React.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":90,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fl5vc\",\"text\":\"Oh, damn me. So what do you use to fetch the data?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4gotb\",\"text\":\"-You use Fetch to fetch the data from the server.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":49,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b5g0l\",\"text\":\"I’m sorry? You use Fetch to fetch the data? Whoever is naming those things needs a thesaurus.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"113f9\",\"text\":\"-I know right? Fetch it’s the name of the native implementation for performing XMLHttpRequests against a server.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":112,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ecjl4\",\"text\":\"Oh, so AJAX.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6h4ge\",\"text\":\"-AJAX is just the use of XMLHttpRequests. But sure. Fetch allows you to do AJAX based in promises, which then you can resolve to avoid the callback hell.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":153,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6hde7\",\"text\":\"Callback hell?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fp8v4\",\"text\":\"-Yeah. Every time you perform an asynchronous request against the server, you need to wait for its response, which then makes you to add a function within a function, which is called the callback pyramid from hell.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":214,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dvqbt\",\"text\":\"Oh, Ok. And this promise thing solves it?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dcebv\",\"text\":\"-Indeed. By manipulating your callbacks through promises, you can write easier to understand code, mock and test them, as well as perform simultaneous requests at once and wait until all of them are loaded.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":206,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3dln2\",\"text\":\"And that can be done with Fetch?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4okmp\",\"text\":\"-Yes, but only if your user uses an evergreen browser, otherwise you need to include a Fetch polyfill or use Request, Bluebird or Axios.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":136,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1lpc9\",\"text\":\"How many libraries do I need to know for god’s sake? How many are of them?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"frttf\",\"text\":\"-It’s JavaScript. There has to be thousands of libraries that all do the same thing. We know libraries, in fact, we have the best libraries. Our libraries are huuuge, and sometimes we include pictures of Guy Fieri in them.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":222,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ai3a4\",\"text\":\"Did you just say Guy Fieri? Let’s get this over with. What these Bluebird, Request, Axios libraries do?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ab78k\",\"text\":\"-They are libraries to perform XMLHttpRequests that return promises.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":68,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8me8d\",\"text\":\"Didn’t jQuery’s AJAX method start to return promises as well?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b2k2i\",\"text\":\"-We don’t use the “J” word in 2016 anymore. Just use Fetch, and polyfill it when it’s not in a browser or use Bluebird, Request or Axios instead. Then manage the promise with await within an async function and boom, you have proper control flow.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":245,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e0q9i\",\"text\":\"It’s the third time you mention await but I have no idea what it is.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"95tkq\",\"text\":\"-Await allows you to block an asynchronous call, allowing you to have better control on when the data is being fetch and overall increasing code readability. It’s awesome, you just need to make sure you add the stage-3 preset in Babel, or use syntax-async-functions and transform-async-to-generator plugin.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":306,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1enh\",\"text\":\"This is insane.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d3nul\",\"text\":\"-No, insane is the fact you need to precompile Typescript code and then transpile it with Babel to use await.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":109,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"247ug\",\"text\":\"Wat? It’s not included in Typescript?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5mlo5\",\"text\":\"-It does in the next version, but as of version 1.7 it only targets ES6, so if you want to use await in the browser, first you need to compile your Typescript code targeting ES6 and then Babel that shit up to target ES5.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":220,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"68lqg\",\"text\":\"At this point I don’t know what to say.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d2ocp\",\"text\":\"-Look, it’s easy. Code everything in Typescript. All modules that use Fetch compile them to target ES6, transpile them with Babel on a stage-3 preset, and load them with SystemJS. If you don’t have Fetch, polyfill it, or use Bluebird, Request or Axios, and handle all your promises with await.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":293,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"61tan\",\"text\":\"We have very different definitions of easy. So, with that ritual I finally fetched the data and now I can display it with React right?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"64pju\",\"text\":\"-Is your application going to handle any state changes?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7emtu\",\"text\":\"Err, I don’t think so. I just need to display the data.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"90k5s\",\"text\":\"-Oh, thank god. Otherwise I would had to explain you Flux, and implementations like Flummox, Alt, Fluxible. Although to be honest you should be using Redux.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":156,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d51sk\",\"text\":\"I’m going to just fly over those names. Again, I just need to display data.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4anpn\",\"text\":\"-Oh, if you are just displaying the data you didn’t need React to begin with. You would had been fine with a templating engine.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":127,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"aru3o\",\"text\":\"Are you kidding me? Do you think this is funny? Is that how you treat your loved ones?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a2hrc\",\"text\":\"-I was just explaining what you could use.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":42,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6q3sj\",\"text\":\"Stop. Just stop.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b0s75\",\"text\":\"-I mean, even if it’s just using templating engine, I would still use a Typescript + SystemJS + Babel combo if I were you.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":122,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fbdqn\",\"text\":\"I need to display data on a page, not perform Sub Zero’s original MK fatality. Just tell me what templating engine to use and I’ll take it from there.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d6juh\",\"text\":\"-There’s a lot, which one you are familiar with?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":48,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"rb3g\",\"text\":\"Ugh, can’t remember the name. It was a long time ago.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"elf6o\",\"text\":\"-jTemplates? jQote? PURE?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bhpla\",\"text\":\"Err, doesn’t ring a bell. Another one?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3gftp\",\"text\":\"-Transparency? JSRender? MarkupJS? KnockoutJS? That one had two-way binding.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":76,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dl19j\",\"text\":\"Another one?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bj9hs\",\"text\":\"-PlatesJS? jQuery-tmpl? Handlebars? Some people still use it.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":61,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"u5sm\",\"text\":\"Maybe. Are there similar to that last one?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9o53p\",\"text\":\"-Mustache, underscore? I think now even lodash has one to be honest, but those are kind of 2014.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":96,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ffvg4\",\"text\":\"Err.. maybe it was newer.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8kvfl\",\"text\":\"-Jade? DustJS?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"20p2c\",\"text\":\"No.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"do7vi\",\"text\":\"-DotJS? EJS?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cirfp\",\"text\":\"No.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"79s6d\",\"text\":\"-Nunjucks? ECT?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":8,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d792g\",\"text\":\"No.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bu8ue\",\"text\":\"-Mah, no one likes Coffeescript syntax anyway. Jade?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c2f9l\",\"text\":\"No, you already said Jade.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d949l\",\"text\":\"-I meant Pug. I meant Jade. I mean, Jade is now Pug.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"vara\",\"text\":\"Sigh. No. Can’t remember. Which one would you use?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4d1se\",\"text\":\"-Probably just ES6 native template strings.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bjb6u\",\"text\":\"Let me guess. And that requires ES6.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bujb4\",\"text\":\"-Correct.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7git8\",\"text\":\"Which, depending on what browser I’m using needs Babel.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8s5i\",\"text\":\"-Correct.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cp60j\",\"text\":\"Which, if I want to include without adding the entire core library, I need to load it as a module from npm.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3u84r\",\"text\":\"-Correct.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"frabf\",\"text\":\"Which, requires Browserify, or Wepback, or most likely that other thing called SystemJS.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"36fat\",\"text\":\"-Correct.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":7,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8u9ke\",\"text\":\"Which, unless it’s Webpack, ideally should be managed by a task runner.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"boo4g\",\"text\":\"-Correct.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"15b8d\",\"text\":\"But, since I should be using functional programming and typed languages I first need to pre-compile Typescript or add this Flow thingy.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f7rf0\",\"text\":\"-Correct.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":7,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"boqu3\",\"text\":\"And then send that to Babel if I want to use await.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2rdtk\",\"text\":\"-Correct.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":7,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1fk3k\",\"text\":\"So I can then use Fetch, promises, and control flow and all that magic.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f46dn\",\"text\":\"-Just don’t forget to polyfill Fetch if it’s not supported, Safari still can’t handle it.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":89,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c4190\",\"text\":\"You know what. I think we are done here. Actually, I think I’m done. I’m done with the web, I’m done with JavaScript altogether.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a8pqp\",\"text\":\"-That’s fine, in a few years we all are going to be coding in Elm or WebAssembly.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":81,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8l21e\",\"text\":\"I’m just going to move back to the backend. I just can’t handle these many changes and versions and editions and compilers and transpilers. The JavaScript community is insane if it thinks anyone can keep up with this.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d4lvc\",\"text\":\"-I hear you. You should try the Python community then.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":54,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ahm8\",\"text\":\"Why?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bdbiu\",\"text\":\"-Ever heard of Python 3?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}}]}",
"user_id": 4,
"main_image_url": "https://cdn-images-1.medium.com/max/1600/1*raWO3dhM4jMjf\n9VY-kZzNg.png"
})

{
"title": "Welcome to Thinkpiece",
"body": "{\"entityMap\":{},\"blocks\":[{\"key\":\"7qqf0\",\"text\":\"\",\"type\":\"atomic:image\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"src\":\"http://i.imgur.com/DSsKAm1.jpg\"}},{\"key\":\"ec1k5\",\"text\":\"Thinkpiece is a new place on the Internet where people share ideas and stories that are longer than 140 characters and not just for friends. It’s designed for little stories that make your day better and manifestos that change the world. It’s used by everyone from professional journalists to amateur cooks. It’s simple, beautiful, collaborative, and it helps you find the right audience for whatever you have to say.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1that\",\"text\":\"If you’re here to read, start on the homepage, where you’ll find links to our editor’s picks of interesting new articles, as well as the most popular pieces among readers right now. If you register and sign in, you can write, leave notes for authors, and recommend the pieces you like.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f6p8r\",\"text\":\"If you’re interested in writing, here are three things to know about how Thinkpiece is different:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9v7er\",\"text\":\"1. Thinkpiece lets you focus on your words\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7i22j\",\"text\":\"Thinkpiece is a beautiful space for reading and writing — and little else. The words are central. They can be accompanied by images to help illustrate your point. But there are no gratuitous sidebars, plug-ins, or widgets. There is nothing to set up or customize.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cvga8\",\"text\":\"When you write on Thinkpiece, you’ll know that your words and pictures will look great on any device; they’ll automatically adjust to the latest technology and even get better over time.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2vi6g\",\"text\":\"Thinkpiece’s composing tool is truly what-you-see-is-what-you-get and has just the right amount of formatting to tell your stories without getting in the way. In short, Thinkpiece is focused on keeping you focused.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a99qs\",\"text\":\"“It’s true: Thinkpiece has the best web-based editor I’ve ever seen. And I’ve seen them all.” —Anil Dash\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8agi1\",\"text\":\"2. Thinkpiece is collaborative\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fn1bh\",\"text\":\"On Thinkpiece, you’re not alone. You write beside and with other people. This means your posts link to each other, your ideas bump into each other, and instead of living on an island somewhere out on the web, you’re part of a dynamic whole, where each part makes the others better.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eq5h3\",\"text\":\"At the heart of Thinkpiece is the idea that people create better things together. Even professional writers need editors, and Thinkpiece makes it easy to get help before you hit the “Publish” button. These same tools let readers engage by offering feedback and ideas in context (with the author always in charge of what gets seen publicly).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3ufgt\",\"text\":\"“This is probably the most awesome UI I’ve ever seen for people to collaborate on writing.” —Daniel Stanoescu\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cdgml\",\"text\":\"3. Thinkpiece helps you find your audience\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"conq\",\"text\":\"We think great ideas can come from anywhere and should compete on their own merits. On Thinkpiece, you can contribute often or just once in a blue moon, without the commitment of a blog. And either way, you’re publishing into a thriving, pulsing network — not a standalone web site, which you alone are responsible for keeping alive.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"atdmv\",\"text\":\"Through a combination of algorithmic and editorial curation, posts on Thinkpiece get spread around based on interest and engagement. Some get hundreds of thousands of readers — and not because they were written by famous people. Thinkpiece is not about who you are or whom you know, but about what you have to say.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":293,\"length\":20,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1m7r9\",\"text\":\"“Over the years, I’ve published my writing in dozens of places on the Internet. More people read a single Thinkpiece post than everything else combined.” —Cliff Watson\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"182pt\",\"text\":\"Why We Built Thinkpiece\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cabd\",\"text\":\"In 1999, two friends and I launched Blogger, a simple tool for publishing on the web. Blogs, or “weblogs,” were largely unknown outside a small community of web geeks. The idea that anyone, anywhere, could publish for a global audience seemed radical.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"949pi\",\"text\":\"Today, we carry the Internet around on pocket-sized devices with more computing power and pixels than we previously had on our desks a few years ago. We have innumerable options for sharing our deep thoughts or cat photos — with or without a retro filter. Our collective, casual, everyday shares demonstrate that millions of people have the power of a printing press at their fingertips. (And they use it.) That is an amazing advancement.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5gv8u\",\"text\":\"We think there’s more to do.\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b7r03\",\"text\":\"It’s clear we’ve only scratched the surface of how we can use the tools available to us to connect hearts and minds. It’s also clear that the way media is changing isn’t entirely positive when it comes to creating a more informed citizenry. Now that we’ve made sharing information virtually effortless, how do we increase depth of understanding, while also creating a level playing field that encourages ideas that come from anywhere?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"92pud\",\"text\":\"We don’t know all the answers. But we know that words matter (still), so we built a better system for sharing them.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"54r91\",\"text\":\"Join Us\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"am7ur\",\"text\":\"Thinkpiece is built for everyone. We encourage you to sign up and give it a try.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9rl6r\",\"text\":\"Thanks for your interest.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}",
"user_id": 4,
"main_image_url": "http://i.imgur.com/DBijwgk.jpg"
}

{
"title": "The day I became a millionaire",
"body": "{\"entityMap\":{},\"blocks\":[{\"key\":\"80bdk\",\"text\":\"I grew up lower-middle class on the outskirts of Copenhagen. Anywhere outside of Scandinavia, the socioeconomic label would probably have been ‘poor’, but Danish safety nets and support systems did their best to suspend the facts and offer better.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"clq5t\",\"text\":\"But don’t worry: This isn’t a rags-to-riches story. I loathe the I-did-it-all-by-myself heroic myth mongering. I got where I am thanks to government-sponsored maternity leave, child care, health care, education, and even cash assistance. I grew up in housing provided by AAB, a union-founded affordable housing association. And my mother was a damn magician at making impossible ends meet without belaboring her tricks (like biking an extra 15 minutes to find the lowest price on milk).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"77f50\",\"text\":\"I took two important lessons away from this upbringing. First, as long as your basic needs are met, the quality of your lived experience is only vaguely related to the trappings of material success. While it wasn’t all roses and butter cookies, I had a great childhood. Second, I wouldn’t learn to appreciate the truth of the first lesson until I saw the other side of the golden fence. More on that in a bit.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7ndtc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2k17t\",\"text\":\"I remember playing the “What would you do if you won a million kroner?” game with my brother many times. We could spend eons making fantasy purchases. Comparing and contrasting choices and possibilities. Could you imagine not having to save up a whole year to buy a Commodore 64? Or to fly away on a foreign-country vacation every year? Or to — let’s go crazy here — buy a car for the family? (The sky setting those limits was barely higher than the Eiffel tower).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9scbk\",\"text\":\"The underlying premise to these imaginary indulgences was how much better life would be if we were free from the constraints of our humble weekly allowance. Man, everything would just be so great if only I could…\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fomjs\",\"text\":\"As I grew older, this game was always at the back of my mind. There were always more things I wanted to do than money to buy them. It wasn’t that working towards certain material goals was really a chore or a struggle. My good fortune of being born in Denmark provided for the basics, and selling pirate software CDs through my Elite BBS contacts provided some modest splendor.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b1qkj\",\"text\":\"But there’s always an appetite for more, and a belief that just a little extra was going to be the tipping point for eternal bliss. Dreaming of an Amiga 1200, making it happen, and then thinking that, oh, what I really needed was that Amiga 4000. Somehow the repeated treadmill never seemed to bare its underlying truth, no matter how many times I took it for a run.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6o8k3\",\"text\":\"Then in 2006, it suddenly happened from one day to the next. Jeff Bezos had taken an interest in Basecamp, and Jason and I each sold him a minority, no-control stake of our share of the company for a few million dollars each (Basecam had been self-funded and profitable from the start, so didn’t need any capital for the venture). I was a millionaire!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"293t4\",\"text\":\"I remember the weeks leading up to that day when the numbers in my checking account suddenly swelled dramatically. They were anxious. I stood at the doorsteps of The Dream. A lifetime of expectations about how totally, utterly awesome it would be to be a millionaire. I’d be able to buy all the computers and cameras I ever wanted and any car I desired!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"381id\",\"text\":\"One of the other underlying pillars of this dream was the concept of Never Having To Work Again. Like somehow an eternity of leisure was going to provide the existential bliss I had been longing for all along. I thought about that a lot. I did all the math: Hey, if I stuff all the money in a prudent mix of stock and bonds, I should be able to live a comfortable, if not extravagant, lifestyle until the end of my days without lifting another finger.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dp91p\",\"text\":\"The euphoria I felt when it was finally real lasted the rest of that day. The inner smile remained super wide for at least the rest of the week.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eb1v2\",\"text\":\"Then a mild crisis of faith ensued. Is this it? Why isn’t the world any different now? *shake, shake* Is this thing even working!?\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"70s8v\",\"text\":\"Now don’t get me wrong, there is an enduring and very real satisfaction and comfort in never having to look at the price of a meal in a restaurant again (even though you still do). It’s just that like a good movie that’s been hyped to the hills, it’s almost impossible not to be let down when you finally see it. Expectations, not outcomes, govern the happiness of your perceived reality.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ae5dj\",\"text\":\"For the first few months, I barely touched any of the money. Sure, I bought a big screen TV and more DVD boxsets than I could hope to consume, but it wasn’t like I couldn’t have done that anyway. It wasn’t until near the end of that year I finally drew down on the account of cliched purchases: A yellow Lamborghini! While all very nice, very wonderful, it didn’t, as we say, really move the needle of deep satisfaction.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aqe8s\",\"text\":\"What kept moving the needle, though, was programming Ruby, building Basecamp, writing for Signal v Noise, taking pictures, and enjoying all the same avenues of learning and entertainment my already privileged lifestyle had afforded me for years in advance.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"em02b\",\"text\":\"If anything, I began to appreciate even more intently that flow and tranquility were the true sources of happiness for me all along. It was like I had pulled back the curtain on that millionaire’s dream and found, to my surprise, that most of the things on the other side were things I already had. Equal parts shock and awe, but ultimately deeply reassuring.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5d98k\",\"text\":\"Chiefly because I couldn’t lose those things. Barring any grand calamity, I could afford to fall off the puffy pink cloud of cash, and I’d land where I started. Back in that small 450 sq feet apartment in Copenhagen. My interests and curiosity intact. My passions as fit as ever. I traveled across a broad swath of the first world spectrum of wealth, and both ends were not only livable, but enjoyable. That was a revelation.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7ckj2\",\"text\":\"It’s funny, though, because I remember rich people trying to tell me this before I was rich. Not necessarily in person, but through clever or modest-profound quotes and interviews. And I remember always thinking “yeah, that’s easy for you to say now — you got yours”. It’s not lost on me that most people reading this will probably feel the same. It’s just the natural, instinctual reaction.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8bcjf\",\"text\":\"Primarily because I think it’s scary to think This Is It. This is what I got. Changing the numbers on my bank account or the size of TV or the make of the car in the garage or the zip code isn’t going to complete me. I have to figure that shit out on my own.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ggtv\",\"text\":\"Again, I get that even having the pretext to contemplate such disillusion is an incredible privilege, beyond sympathy or even empathy of many in this world. I never went hungry to bed. I never feared getting shot. I never worried whether the end of my future prospects would be as a store clerk working minimum wage. The Danish experience shielded me from all those concerns of basic safety and comfort. So I won’t even pretend to know that struggle.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8oh0n\",\"text\":\"I can only speak to the experience I did have. The one I do share with millions of people who have the basics taken care of, but who still yearn for the treasure perceived to be behind the curtain. For those who might contemplate giving up all manners of integrity, dignity, or even humanity to pull it back.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cisk1\",\"text\":\"We humans acclimate to our surroundings incredibly quickly. The buzz is not going to last. Until you realize the next rung of the ladder isn’t where salvation hides, the siren song will keep playing.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6bdbm\",\"text\":\"The best things in life are free. The second best things are very, very expensive — Coco Chanel\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a6rfs\",\"text\":\"While the quote above rings true, I’d add that the difference between the best things and the second best things is far, far greater than the difference between the second best things and the twentieth best things. It’s not a linear scale.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dacg7\",\"text\":\"Once you’ve taken care of the basics, there’s very little in this world for which your life is worth deferring. You’ve likely already found or at least seen the very best things (whether you know it or not). Make them count.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}",
"user_id": 7,
"main_image_url": "http://i.imgur.com/0VYH9wv.jpg"
}

{
"title": "Constraints only work if they hurt",
"body": "{\"entityMap\":{},\"blocks\":[{\"key\":\"adb9r\",\"text\":\"We run on 6-week budgets for most major product work at Basecamp. It’s not that everything has to done in that time, but the self-imposed constraint makes us try. It’s not a deadline, mind you, but a budget. Deadlines are just excuses for death marches (fixed scope, fixed time). Screw deadlines.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4mdog\",\"text\":\"Budgets, on the other hand, instruct us to keep quality high but scope variable. When making decisions on how to fit within budget, we decide to write less software. Fewer features, fewer settings, fewer wouldn’t-it-be-cool-if’s.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bj2is\",\"text\":\"Nothing brings clarity to the discussion like “well, there’s only 3 weeks left: We can either do A and B, but not C. Or just C. Which would you rather?”. It moves the debates out of the we-really-ought-to realm. That’s the realm free of compromise and trade-offs. That’s the realm of bloated, late software.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1mpt9\",\"text\":\"This might make it sound easy to ship great software on time, but of course it’s not. Because like any good constraint, it hurts when its working. We have to kill our darlings all the time. Features, settings, considerations that we really think are important have to be cut constantly. When something you believe to be important doesn’t make it, it hurts.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a40i0\",\"text\":\"But it’s also the right thing to do. We’ve proven that time and time again. Things we thought were terribly important in the heat of the argument frequently turns out not to matter at all. And above all, the discipline and the habit of shipping software every six weeks (or thereabouts) is worth some real sacrifice.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b9f2a\",\"text\":\"We’ve run other intervals in the past, and we sometimes do when circumstances warrant. Our standard used to be two months, but we’d still go a week or two over budget with that schedule. And it’s not clear that the software we shipped was appreciably better. Now we only run on 8-week cycles over the Summer when we work four days a week instead of five.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1kofa\",\"text\":\"Shipping software on a budget rather than on a deadline or When It’s Done is a key component to how we’ve written and released so much with such a small team for so long. It’s probably been the most helpful general concept we’ve adopted from agile development. It doesn’t even require a big process, a backlog, or a stand-up meeting. But it will occasionally hurt. That’s when you know it’s working.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}",
"user_id": 7,
"main_image_url": ""
}

{
"title": "Ruby has been fast enough for 13 years",
"body": "{\"entityMap\":{},\"blocks\":[{\"key\":\"7n049\",\"text\":\"When I started programming Ruby, it was on an Apple iBook G4/800. That beautiful 12” powerhouse of a 800 MHz PowerPC with a rocking 256MB of RAM. A lovely computer that was not only fast enough to run Ruby, but a pleasure to develop the first version of both Rails and Basecamp on.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d2q6s\",\"text\":\"When Basecamp launched in February of 2004, we ran on a single shared Linux server at Tilted. I don’t fully remember the CPU spec, but I do remember that we had the same 256MB of RAM available. And I believe the monthly cost for this princely server was around $349. It was not only fast enough to run Rails and Basecamp, but good enough to do so on its own for more than a year while we built a business that could pay the salaries of four.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2bdjs\",\"text\":\"So forgive me if the zombie theme of “Ruby is so damn slow” isn’t striking a recognizable tune with me. Now, I don’t for a minute doubt that Ruby may well be too slow for some people doing some things. But given the fact that Ruby was plenty fast for me in 2003 on a bootstrapped budget with the performance of the day, I think perhaps that tune is out of key for many others too.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cgge5\",\"text\":\"We built an application used by millions of people that has made tens of millions of dollars in real money and continues to grow and prosper. No, it’s certainly not Internet Scale™. And it certainly doesn’t prove that Ruby is fast enough to be economical when you get there, but it does lodge an anecdote that it’s probably more than fast enough for most people doing most things.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aj0gc\",\"text\":\"Don’t get me wrong, though. I love speed. I especially love free and cheap speed. It’s just that I’m not willing to trade things that are of real, enduring value to get more of a nice-to-have once we’ve long since reached Good Enough. Things like programmer happiness, the eloquence of Ruby, and the productivity of Rails.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bbrbj\",\"text\":\"Ruby is a luxury in the most egalitarian sense possible. It’s a luxury that the 99% can afford, but the 1% might struggle with. What a wonderful inversion of tradition!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"61b90\",\"text\":\"It’s an incredibly affordable luxury for all those businesses where the cost of people, not machines, dominate the balance sheet. There are many such businesses today, and Ruby has never been better for those.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c93nl\",\"text\":\"And again. I’m not decrying speed. The ambitious goals of Ruby 3x3, the continued focus to optimize Rails, and the many performance wonks in the community who work tirelessly to make everything faster do great work that I’m thrilled to benefit from.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f867b\",\"text\":\"It’s just that most of it is gravy for most people. Oh, I can save a few extra instances because of this latest patch? Wonderful. Thank you very much! (If only it served as a drop in the bucket to pay the latest increase in healthcare premiums that arrived in 2016.)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"h5hk\",\"text\":\"Ruby was fast enough in 2003 to build a business like Basecamp with no impediments. Ruby is so much faster and so much cheaper in 2016 it’s ridiculous. On the other hand, skilled programmers have never been more expensive. Splurge on the luxuries you can afford to keep them happy.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}",
"user_id": 7,
"main_image_url": "",
}

{
"title": "Two words of advice you rarely hear.",
"body": "{\"entityMap\":{},\"blocks\":[{\"key\":\"3gc9a\",\"text\":\"Be Useful.\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9nce6\",\"text\":\"These two words serve as my daily mission statement. Every time I feel a little lost or don't remember what I wanted to do, I go back to the basics. I just try to be useful.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"vf04\",\"text\":\"Being useful is so simple. It not only helps other people but also yourself. Being useful makes me happy, because whatever it might be, there is never a single minute wasted being useful.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":105,\"length\":82,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"47b1e\",\"text\":\"Sometimes I have a bad day. Sometimes it's hard to stay positive and I get lost in the world of negativity and criticism. Especially online it's easy to be negative.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5350p\",\"text\":\"Exactly then I usually try to remind myself to rather be useful instead. Because being negative and being an asshole is the opposite of being useful as there is little added value for anyone involved.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":73,\"length\":127,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8u0p2\",\"text\":\"There are many ways you can be useful to other people and it's often more simple than you think - Here are my top 3:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6ht9d\",\"text\":\"Share knowledge\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"k88o\",\"text\":\"You can share knowledge and the things you know with people who might know less. That's why I always say that you are never too young to teach. There is always someone who might appreciate your opinion on whatever topic it might be.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"edueg\",\"text\":\"On top of it, sharing knowledge is rewarding. You're not only helping others but yourself. Sharing knowledge helps you to reflect, form and communicate your thoughts more clearly.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1rkr6\",\"text\":\"Solve a small problem\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3dukd\",\"text\":\"You can help people by solving a problem they are having. It doesn't have to be a massive problem, it can be something small.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"clgc1\",\"text\":\"Sometimes when I work with other people I try to figure out what small problems they might have. And if I spot one where I feel like my expertise can help solve it within less than 15-30min of my time, I will try to solve it.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8pd1u\",\"text\":\"I know these things can be hard, because once you give someone the small finger to help, some might bite off your hand. But the people who become super demanding only because you offered them a little help, usually aren't the people you want to have around anyway.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"49mq8\",\"text\":\"\",\"type\":\"atomic:image\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"src\":\"http://i.imgur.com/qZqbycs.jpg\"}},{\"key\":\"6p9ra\",\"text\":\"It's not your job? Do it anyway!\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"shu7\",\"text\":\"I've grown up as a jack of all trades. There is little where I would say this is not part of my job description. Whatever needs to be fixed, I fix it. If I can fix a hardware problem, I just do it. If I can help with setting up an online payment flow, I will do it. If I can help designing an app, I will do this too.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cvkpr\",\"text\":\"I always love to work with people who know how to handle any situation that comes at them. And I'm not saying you should get lost in tiny tasks, but you should never be afraid doing things that are not part of your \\\"official job description\\\". It always annoys me when I work with people that clearly found a problem, but haven't even tried to solve it because it's \\\"not their job\\\".\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"47sto\",\"text\":\"I think being useful is a highly underestimated value that we rarely talk about. I love working with useful people because they ask the right questions rather than just trying to find the answers.\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cchu6\",\"text\":\"Useful people add value where there was no value before.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5kcmn\",\"text\":\"Useful people are interested in being useful and helping you the best way possible. Getting the job done or doing a task that you got assigned is one thing, but being useful is a completely different way of doing things.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5iml1\",\"text\":\"Even if my to do list is completely packed tomorrow, I try to focus on the tasks where I can be most useful to others. It makes me happy and sleep well at night.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2u4oq\",\"text\":\"And with that, I wish you a fantastic new week- Be Useful.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"adsqa\",\"text\":\"Yours truly,\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"adfsc\",\"text\":\"Tobias\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"834mg\",\"text\":\"PS: I usually send out these articles via my personal email list right here. You can sign up anytime, I won’t spam, promise.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4jcvv\",\"text\":\"Thanks for hitting the 💚 if you enjoyed this article. This will tell me to write more of it!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}",
"user_id": 8,
"main_image_url": "http://i.imgur.com/NgzROki.jpg"
}

{
"title": "Front-End Development Is Design",
"body": "{\"entityMap\":{},\"blocks\":[{\"key\":\"7qrd5\",\"text\":\"\",\"type\":\"atomic:image\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"src\":\"http://i.imgur.com/6KhOYCw.jpg\"}},{\"key\":\"f5503\",\"text\":\"Design improvisation always happens in front-end development.\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"coa5j\",\"text\":\"Even after the most elaborate conceptualization of a user interface, there will always be hurdles during the front-end development process that will require some form of design consideration.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"gunj\",\"text\":\"This is especially the case with large scale projects—the bigger the scope, the increased likelihood that design support is required during a build. Even thoroughly prepared style guides and systems will fail to guarantee solutions to all the unforeseeable issues.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dfko8\",\"text\":\"The front-end developer’s challenges are concurrent with the designer’s. Improvised design is done by the front-end developer more often than you think.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"74b7h\",\"text\":\"How Design Issues Emerge\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"60a1s\",\"text\":\"If it were easy to anticipate how design issues emerge, all the solutions would be accounted for prior to build, and development would go smoother. However, that is generally not the reality.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"41s7t\",\"text\":\"\",\"type\":\"atomic:image\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"src\":\"http://i.imgur.com/zdsWHoP.jpg\"}},{\"key\":\"cl2eu\",\"text\":\"Lack Of Clarity\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4i3rt\",\"text\":\"Designers lean on result-driven research and best practices for UX, and fill in the blanks with their best assumptions during the design process. The truth is, it’s not always possible to get a clear picture without being able to test the UI on a physical device with real interaction. Prototypes and living style guides can help provide clarity, but are not always in scope.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"81bq7\",\"text\":\"What makes perfect sense in wireframes and static comps doesn’t always translate perfectly in reality.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eiv82\",\"text\":\"Developers don’t always interpret the designer’s original intentions exactly, or the designs have potential development challenges that weren’t discussed in the design process. This is why continuous collaboration is important throughout the design and development phase.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9m41j\",\"text\":\"Content Hurdles\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8c1ut\",\"text\":\"Development can be given the go-ahead after the most optimistic of sign-offs on content, yet for one reason or another, changes can get requested midway through development or post-completion, at no fault to project planning.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"821fn\",\"text\":\"Additional content can get shoehorned in, or new enhancements can suddenly become mandatory.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9q2us\",\"text\":\"While it’s possible to get through a project without any of this occurring, content implications can commonly transpire when portions of real content are segregated from mockups—when compositions are provided with a rough idea of the content for stylistic purposes. Even subtle differences can cause design decisions mid-way through development.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5jknn\",\"text\":\"Responsive Translation And Gaps\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"aqdhd\",\"text\":\"With responsive websites in particular, gaps in responsive states can lead to awkward scaling or layout issues with components or elements, or issues such as background imagery being cropped in unexpected ways. Although typical best practices cover most scenarios by mocking up about three states—mobile, tablet and desktop, a lot of factors can emerge between and beyond those dimensions.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dpis6\",\"text\":\"Most UI designers only consider the average breakpoints and dimensions, but it’s important to consider lesser known ones (eg. ultra large-scale displays).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b9p4q\",\"text\":\"It varies between teams and projects, but not all pages or templates are mocked up as high-fidelity comps. It’s possible they are left to depend on a system where modules are pulled together to compose a template. In this case, design support is required to organize the placement or integration of those modules.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"43fpe\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9gnfl\",\"text\":\"Static compositions are usually created in pixels and fixed values, whereas best practices advocate the use of relative units in development. The modern UI is no longer built pixel-perfect, per se. This can potentially cause rough translations of dimensions and spacing, particularly with typography and overall layout.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3d4jj\",\"text\":\"Tackling The Unforeseeable\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5n1jd\",\"text\":\"These issues don’t necessarily amount to huge design changes or additions, but if we accept that they may happen, a team can be better prepared through a different mindset and certain practices.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8hb50\",\"text\":\"It usually starts with a developer. When a design issue or a potential one is discovered, they will either let it slide, attempt to tackle it themselves, or reach for help.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5oh4j\",\"text\":\"Front-End Developers Should Know Design Basics\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":46,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"an1lu\",\"text\":\"Letting any potential, even subtle, design issues slide can incur design debt and should be prevented. They can be unintentionally left if one is not able to recognize them, so it’s of great benefit for front-end developers to have basic knowledge of design fundamentals so they can either tackle certain issues themselves, or know when they need support from a designer.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4feba\",\"text\":\"Having basic design skills in the back pocket can help a front-end developer catch potential issues more easily and make the right decisions upfront.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8m5eu\",\"text\":\"With smaller teams or projects, it’s not uncommon for a designer working on the project to also be the front-end developer. However, with big teams full of specialists, that scenario is rare. Depending on how comfortable the design team are with developers addressing solutions on their behalf, it can be beneficial to let them improvise on the no-brainer decisions if they have competent design skills, and reach for design support for bigger issues.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6pfot\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"16cb9\",\"text\":\"Continuous Collaboration\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bq0ku\",\"text\":\"Regardless of whether the developer has the authority or expertise to address design issues without help, the more designers and developers can collaborate throughout the design and build of a project, the better.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"h2r7\",\"text\":\"Continuous collaboration can provide instant feedback on areas of the build in real time so that issues, current and potential, can be extinguished quicker and easier.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fefk8\",\"text\":\"Even during the design process, a developer’s expertise should be present so there are no hiccups and broken promises later. It can also improve the team’s morale and enthusiasm when both sides are problem-solving and are on the same page.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1blp7\",\"text\":\"Being Prepared To Improvise\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1aof1\",\"text\":\"When an unexpected design issue arises in the development of a website or app, a team will often have no choice but to react in the moment and improvise a solution there and then—which may or may not require sign-off from stakeholders depending on the size of the issue, but it becomes critical for a team to think on their feet at a moment’s notice.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"357h9\",\"text\":\"Improvising may lead to compromises, and teams should be prepared for this as well.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bagcs\",\"text\":\"Developers may have to re-engineer code to accommodate a design preference, and designers may have to adjust the appearance or desired functionality based on coding limitations. This is part of being able to collaborate successfully. By embracing the near-certainty that improvisation is required during development, it can be a natural part of the process.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bg776\",\"text\":\"Final Note\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9og1p\",\"text\":\"By having a shared awareness of design principles, being more actively collaborative and having the willingness to improvise, teams can better alleviate the design issues in the development phase. Specialist front-end developers can be more involved in the design process, and by doing so reduce the possibility of design debt and potential hacks.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}",
"user_id": 4,
"main_image_url": "http://i.imgur.com/Fjm2Lth.jpg"
}
